# server {
#     listen                               443 ssl http2;
#     listen                               [::]:443 ssl http2;
#     server_name                          www.example.com;
#     set                                  $base /data/wwwroot/example.com;

#     # SSL
#     ssl_certificate                      /data/wwwroot/example.com/ssl/fullchain.pem;
#     ssl_certificate_key                  /data/wwwroot/example.com/ssl/privkey.pem;

#     # HSTS
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

#     # security
#     include                              nginxconfig.io/security.conf;

#     # logging
#     access_log                           /data/wwwroot/example.com/log/access.log combined buffer=512k flush=1m;
#     error_log                            /data/wwwroot/example.com/log/error.log warn;

#     # Application Specific Configurations
#     # Include the PrestaShop or Magento configuration based on your deployment
#     root                                 $base/public/prestashop;
#     include                              nginxconfig.io/prestashop.conf;

#     # index.php
#     index                                index.php;

#     # index.php fallback
#     location / {
#         try_files $uri $uri/ /index.php$is_args$args;
#     }

#     # additional config
#     include nginxconfig.io/general.conf;

#     # handle .php
#     location ~ \.php$ {
#         fastcgi_pass unix:/dev/shm/php-cgi.sock;
#         include      nginxconfig.io/php_fastcgi.conf;
#     }
# }

# # non-www, subdomains redirect
# server {
#     listen              443 ssl http2;
#     listen              [::]:443 ssl http2;
#     server_name         .example.com;

#     # SSL
#     ssl_certificate     /data/wwwroot/example.com/ssl/fullchain.pem;
#     ssl_certificate_key /data/wwwroot/example.com/ssl/privkey.pem;
#     return              301 https://www.example.com$request_uri;
# }

# # HTTP redirect
# server {
#     listen      80;
#     listen      [::]:80;
#     server_name .example.com;
#     return      301 https://www.example.com$request_uri;
# }